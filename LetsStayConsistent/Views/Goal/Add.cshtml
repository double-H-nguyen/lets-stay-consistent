@model LetsStayConsistent.ViewModels.GoalAddViewModel

<div class="mt-3">
    <h2>Add Goal</h2>
    <hr />

    @using (Html.BeginForm("Add", "Goal", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DaysToComplete, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DaysToComplete, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DaysToComplete, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reward, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Reward, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Reward, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-dark btn-lg" />
            </div>
        </div>
    }
</div>

<div>
    @Html.ActionLink("Back to List", "Index", "Goal", null, new { @class = "col-md-offset-2 col-md-10" })
</div>
