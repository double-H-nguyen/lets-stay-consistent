@model LetsStayConsistent.ViewModels.GoalDetailsViewModel

<div class="mt-3">
    <h2>Goal Details</h2>
    <hr />

    <p>
        @Html.LabelFor(m => m.Goal.Id):
        <span>
            @Model.Goal.Id
        </span>
    </p>

    <p>
        @Html.LabelFor(m => m.Goal.Name):
        <span>
            @Model.Goal.Name
        </span>
    </p>

    <p>
        @Html.LabelFor(m => m.Goal.DaysToComplete):
        <span>
            @Model.Goal.DaysToComplete
        </span>
    </p>

    <p>
        @Html.LabelFor(m => m.Goal.Reward):
        <span>
            @Model.Goal.Reward
        </span>
    </p>

    <h2>Goal's Progress</h2>
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">@Html.LabelFor(m => m.GoalLogs[0].Id)</th>
                <th scope="col">@Html.LabelFor(m => m.GoalLogs[0].Date)</th>
                <th scope="col">@Html.LabelFor(m => m.GoalLogs[0].WasCompleted)</th>
                <th scope="col">@Html.LabelFor(m => m.GoalLogs[0].GoalId)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var log in Model.GoalLogs)
            {
                <tr>
                    <td>@log.Id</td>
                    <td>@log.Date</td>
                    @if (@log.WasCompleted)
                    {
                        <td>Yes</td>
                    }
                    else
                    {
                        <td>No</td>
                    }
                    <td>@log.GoalId</td>
                </tr>
            }
        </tbody>
    </table>

    @Html.ActionLink("Return to goals list", "Index", "Goal", null, null)
</div>
